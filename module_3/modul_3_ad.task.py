def calculate_structure_sum(n):
    global summa
    # 4,5 строки убираем после введения глобальной переменной summa = 0  внизу. Но тогда сумма 3850. Почему?
    summa = 0
    print(n)

    for i in n:                                              # перебор всех элементов списка и анализ
        if isinstance (i, (list, tuple, set)):               # функция isinstance проверяет каждый элемент - подходит или нет под указанные изменяемые типы
            summa += calculate_structure_sum(i)              # вызываем функцию и добавляем каждое значение к сумме
        elif isinstance (i, dict):                           # функция isinstance проверяет каждый элемент - подходит или нет под указанный неизменяемый тип
            summa += calculate_structure_sum(i.items())      # вызываем функцию и добавляем каждое значение картежа к сумме
        elif isinstance(i, (int, float)):                    # функция isinstance проверяет каждый элемент - подходит или нет под указанный тип чисел
            summa += i                                       # добавляем число к сумме
        elif isinstance(i, str):                             # функция isinstance проверяет каждый элемент - подходит или нет под тип строки
            summa += len(i)                                  # добавляем длину строки к сумме
    return summa                                                # точка окончания рекурсии

data_structure = [
  [1, 2, 3],
  {'a': 4, 'b': 5},     #(('a', 4), ('b', 5))
  (6, {'cube': 7, 'drum': 8}),
  "Hello",
  ((), [{(2, 'Urban', ('Urban2', 35))}])
]

# 1 + 2 + 3 + len('a') + 4 + len('b') + 5 + 6 + len('cube') + 7 + .... + 35 = 99

#summa = 0                                                      # вводится глобальная переменная, равная изначально 0
result = calculate_structure_sum(data_structure)
print(result)

# Выходные данные (консоль):
# 99
# Примечания (рекомендации):
#
# Весь подсчёт должен выполняться одним вызовом функции.
# Рекомендуется применить рекурсивный вызов функции, для каждой внутренней структуры.
# Т.к. каждая структура может содержать в себе ещё несколько элементов, можно использовать параметр *args
# Для определения типа данного используйте функцию isinstance.

